build_models.py

"""
FILE: features.py
Author: Jip Heimeriks, Milo Broerse, Lucas van Scheijk
"""
from custom_chunker import ConsecutiveNPChunker
from nltk.corpus import conll2002 as conll
import pickle
import inspect
import features

training = conll.chunked_sents("ned.train")
# Get all members of the module
members = inspect.getmembers(features)
all_features = [member[1] for member in members if inspect.isfunction(member[1])]

n = 0
for feature in all_features:
        n+=1
        tagger = ConsecutiveNPChunker(feature, training)
        output = open(f"classifier.pickle{n}", "wb")
        pickle.dump(tagger, output)
        output.close()
        
       
       
###############################################################################################
evaluate_models.py 

"""
FILE: features.py
Author: Jip Heimeriks, Milo Broerse, Lucas van Scheijk
"""
from custom_chunker import ConsecutiveNPChunker
from nltk.corpus import conll2002 as conll
import pickle
import features
import build_models

test_sents = conll.chunked_sents("ned.testa")[:100] 
for i in range(len(build_models.all_features)):
    input = open(f"classifier.pickle{i+1}", "rb")
    Classifier = pickle.load(input)
    print(f"classifier.pickle{i+1}")
    print(Classifier.accuracy(test_sents))
    input.close()
